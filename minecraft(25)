#include "robot-config.h"
void reverse(){
 Bottom_left.spin(directionType::rev);
 Bottom_right.spin(directionType::rev);
}
void forward(){
  Bottom_left.spin(directionType::fwd);
 Bottom_right.spin(directionType::fwd);
}
void sleep(){
    task::sleep(2000);
}
void right(){
 Bottom_left.spin(directionType::rev);
    
 Bottom_right.spin(directionType::fwd);
    
}
void left(){
 Bottom_left.spin(directionType::fwd);
    
 Bottom_right.spin(directionType::rev);
    
}
int main()
{
  
}
void autonomous( void )
{
reverse();
sleep();
forward();  
sleep();
}
void usercontrol( ){
    while(true)
    {
       
        Bottom_left.spin(directionType::fwd, Controller1.Axis3.value(), velocityUnits::pct);
        Bottom_right.spin(directionType::fwd, Controller1.Axis2.value(), velocityUnits::pct);
        if(Controller1.ButtonR1.pressing()) {
        //intake
        Brush1.setVelocity(100, velocityUnits::pct);
        Brush2.setVelocity(100, velocityUnits::pct);
        Brush1.spin(directionType::rev);
        Brush2.spin(directionType::rev);
        }
        else if(Controller1.ButtonL1.pressing())  {
        //outake
        Brush1.setVelocity(50, velocityUnits::pct);
        Brush2.setVelocity(50, velocityUnits::pct);
        Brush1.spin(directionType::fwd);
        Brush2.spin(directionType::fwd);
        }
        
        else {
        Brush1.stop(brakeType::brake);
        Brush2.stop(brakeType::brake);
        }
        //push mechanizm stuff
        if(Controller1.ButtonA.pressing()) {
        Push_mechanism.setVelocity(50, velocityUnits::pct);
        Push_mechanism.spin(directionType::fwd);
        Push_mechanism2.setVelocity(50, velocityUnits::pct);
        Push_mechanism2.spin(directionType::fwd);
        }
        //other push mechanizm stuff
        else if(Controller1.ButtonB.pressing()) {
        Push_mechanism.setVelocity(50, velocityUnits::pct);
        Push_mechanism.spin(directionType::rev);
        Push_mechanism2.setVelocity(50, velocityUnits::pct);
        Push_mechanism2.spin(directionType::rev);
        }
        //to stop
        else 
        {
            Push_mechanism.stop(brakeType::brake);
            Push_mechanism.stop(brakeType::brake);
        }
                     
   }
}
    
