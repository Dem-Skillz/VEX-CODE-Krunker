#include "robot-config.h"
void reverse(){
 Bottom_left.spin(directionType::rev);
 Bottom_right.spin(directionType::rev);
}



void forward(){
 Bottom_left.spin(directionType::fwd);
 Bottom_right.spin(directionType::fwd);
}



void sleep(){
    task::sleep(12000);
}



void right(){
 Bottom_left.spin(directionType::rev);
 Bottom_right.spin(directionType::fwd);  
}



void left(){
 Bottom_left.spin(directionType::fwd);  
 Bottom_right.spin(directionType::rev);
}



    

int main()
{
  
}
void autonomous( void )
{
reverse();
sleep();
}
void usercontrol( ){
    while(true)
    {
       
        Bottom_left.spin(directionType::fwd, Controller1.Axis3.value(), velocityUnits::pct);
        Bottom_right.spin(directionType::fwd, Controller1.Axis2.value(), velocityUnits::pct);
        
        
        if(Controller1.ButtonL1.pressing()) {
        //intake
        Claw.setVelocity(100, velocityUnits::pct);
        Claw.spin(directionType::fwd);
        }
        
        
        
        else if(Controller1.ButtonR1.pressing())  {
        //outake
        Claw.setVelocity(100, velocityUnits::pct);
        Claw.spin(directionType::rev);
        }
        
        
        
        else {
        Claw.stop(brakeType::brake);
        }
        
        
        
        //push mechanizm stuff
        if(Controller1.ButtonL2.pressing()) {
        Push_mechanism.setVelocity(50, velocityUnits::pct);
        Push_mechanism.spin(directionType::fwd);
        Push_mechanism2.setVelocity(50, velocityUnits::pct);
        Push_mechanism2.spin(directionType::fwd);
        }
        
        
        
        //other push mechanizm stuff
        else if(Controller1.ButtonR2.pressing()) {
        Push_mechanism.setVelocity(50, velocityUnits::pct);
        Push_mechanism.spin(directionType::rev);
        Push_mechanism2.setVelocity(50, velocityUnits::pct);
        Push_mechanism2.spin(directionType::rev);
        }
        
        
        
        //to stop
        else 
        {
            Push_mechanism.stop(brakeType::brake);
            Push_mechanism2.stop(brakeType::brake);
            
        }
        
        //to flip cube up
        if(Controller1.ButtonX.pressing()){
        Rotator.setVelocity(100, velocityUnits::pct);    
        Rotator.spin(directionType::fwd); 
        }
        //to flip cube down
        if(Controller1.ButtonB.pressing()){
        Rotator.setVelocity(100, velocityUnits::pct);
        Rotator.spin(directionType::rev);    
        }
        
        
        
         
   }
}
    
